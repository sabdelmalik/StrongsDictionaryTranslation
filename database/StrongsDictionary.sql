-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

DROP TABLE IF EXISTS public."strongs_numbers" CASCADE;
DROP TABLE IF EXISTS public.book CASCADE;
DROP TABLE IF EXISTS public."bible_words_references" CASCADE;
DROP TABLE IF EXISTS public."bible_text";
DROP TABLE IF EXISTS public."dictionary_translation";
DROP TABLE IF EXISTS public."language";
DROP TABLE IF EXISTS public."strongs_references";
DROP TABLE IF EXISTS public.google_sheet;
DROP TABLE IF EXISTS public.sheets_updates;

CREATE TABLE IF NOT EXISTS public.bible_text
(
    id bigserial NOT NULL,
    language_id integer NOT NULL,
    book_id integer NOT NULL,
    chapter_num integer NOT NULL,
    verse_num integer NOT NULL,
    verse_text text COLLATE pg_catalog."default",
    CONSTRAINT bible_text_pkey PRIMARY KEY (id),
    CONSTRAINT bible_text_book_id_chapter_num_verse_num_key UNIQUE (book_id, chapter_num, verse_num)
);

CREATE TABLE IF NOT EXISTS public.strongs_numbers
(
    id bigserial NOT NULL,
    strongs_number character(5) COLLATE pg_catalog."default" NOT NULL,
    d_strong character(1) COLLATE pg_catalog."default",
    original_word character varying(128) COLLATE pg_catalog."default" NOT NULL,
    english_translation character varying(128) COLLATE pg_catalog."default" NOT NULL,
    long_text text COLLATE pg_catalog."default",
    short_text text COLLATE pg_catalog."default",
    step_united_reason character varying(32),
    step_type character varying(32),
    transliteration character varying(128) COLLATE pg_catalog."default",
    pronunciation character varying(128),
    CONSTRAINT "StrongsNumbers_pkey" PRIMARY KEY (id),
    CONSTRAINT strong_numbers_unique UNIQUE (strongs_number, d_strong)
);

CREATE TABLE IF NOT EXISTS public.bible_words_references
(
    id bigserial NOT NULL,
    language_id integer NOT NULL,
    strongs_number character(5) NOT NULL,
    d_strong character(1),
    word character varying(64) COLLATE pg_catalog."default" NOT NULL,
    "references" text,
    CONSTRAINT bible_words_references_pkey PRIMARY KEY (id),
    CONSTRAINT bible_words_references_augmented_strong UNIQUE (language_id, strongs_number, word)
);

CREATE TABLE IF NOT EXISTS public.book
(
    id integer NOT NULL,
    usfm_name character varying(64) COLLATE pg_catalog."default" NOT NULL,
    osis_name character varying(64) COLLATE pg_catalog."default",
    full_name character varying(128) COLLATE pg_catalog."default",
    CONSTRAINT book_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dictionary_translation
(
    id bigserial NOT NULL,
    language_id integer NOT NULL,
    strongs_number character(5) NOT NULL,
    d_strong character(1),
    transliteration character varying(128),
    translated_word character varying(128),
    translated_long_text text,
    translated_short_text text,
    reviewed boolean DEFAULT FALSE,
    reviewer_initials character varying(8),
    approved boolean DEFAULT FALSE,
    approver_initials character varying(8),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.language
(
    id integer NOT NULL,
    name character varying(128),
    iso_639_1 character(2) NOT NULL,
    iso_639_2 character(3) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.strongs_references
(
    id bigserial NOT NULL,
    strongs_number character(5) COLLATE pg_catalog."default" NOT NULL,
    d_strong character(1) COLLATE pg_catalog."default",
    "references" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Strongs_references_pkey" PRIMARY KEY (id),
    CONSTRAINT strongs_references_augmented_strong UNIQUE (strongs_number, d_strong)
);

CREATE TABLE IF NOT EXISTS public.updated_translation
(
    id bigserial NOT NULL,
    language_id integer NOT NULL,
    strongs_number character(5) NOT NULL,
    d_strong character(1),
    transliteration character varying(128),
    translated_word character varying(128),
    translated_text text,
    reviewer_initials character varying(32),
    approved boolean DEFAULT FALSE,
    approver_initials character varying(32),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.google_sheet
(
    id character varying(128) NOT NULL,
    name character varying(64),
    last_updated timestamp without time zone NOT NULL,
    PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS public.sheets_updates
(
    translation_id bigint,
    sheet_id character varying(128),
    update_date timestamp without time zone,
    updater_name character varying(128),
    updater_email character varying(128),
    status integer,
    translated_text text
);

ALTER TABLE IF EXISTS public.bible_text
    ADD FOREIGN KEY (language_id)
    REFERENCES public.language (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.bible_text
    ADD FOREIGN KEY (book_id)
    REFERENCES public.book (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.dictionary_translation
    ADD FOREIGN KEY (language_id)
    REFERENCES public.language (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.dictionary_translation
    ADD FOREIGN KEY (strongs_number, d_strong)
    REFERENCES public.strongs_numbers (strongs_number, d_strong) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
